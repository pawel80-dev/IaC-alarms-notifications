name: 'Alarms notifcations dev'

on:
  push:
    branches:
      - 'dev'

  # Workflow needs to be started manually
  workflow_dispatch:
    inputs:
      action_type:
        description: 'Config generator runtime env:'
        required: true
        default: 'Action1'
        type: choice
        options:
          - Display-services-data
          - Action2
          - Function-code-deploy
          - Variable-add-update
      var_key:
        description: 'Key:'
        required: true
        type: string
        default: 'None'
      var_value:
        description: 'Value:'
        required: true
        type: string
        default: 'None'

env:
  TW_ACCOUNT_SID: ${{ secrets.TW_ACCOUNT_SID }}
  TW_AUTH_TOKEN: ${{ secrets.TW_AUTH_TOKEN }}
  TW_SERVICE_SID: 'ZS66a86c95d72784c0839cc8bdb2e24d6c'
  TW_FUNC_SID: 'ZH2219f158a5d93e5b0693d446a0c41424'
  TW_ENV_SID: 'ZE0568be8824050905a06747614a151c83'
  # TW_BUILD_SID: 'ZB729a470ae6ff5ec4c72334197bcf4c4c'
  PY_CODE_PATH: 'source'
  NODE_JS_CODE_PATH: 'source/alarm_func.js'
  TW_URL: 'https://serverless.twilio.com/v1/Services'
  TW_CODE_URL: 'https://serverless-upload.twilio.com/v1/Services'

##################### Twilio Function Deployment Steps: #####################
# 1. Create a service
# 2. Create a Function
# 3. Create environment variables (if needed and if they already do not exist)
# 4. Upload (update) your function code as a new Function Version
# 5. Create a new Build that includes your Function Version
# 6. Deploy the Build to your desired Environment

jobs:
  twilio_function:
    name: 'Twilio Function'
    # if: ${{ github.event_name != 'workflow_dispatch' }}
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5

      - name: 'Python: Install'
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'

      - name: 'Python: Install dependencies'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ${{ env.PY_CODE_PATH }}/requirements.txt

      - name: 'Twilio: Display available services information'
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action_type == 'Display-services-data' }}
        run: |
          python ${{ env.PY_CODE_PATH }}/twilio_service_data.py \
                 ${{ env.TW_URL }} \
                 ${{ secrets.TW_ACCOUNT_SID }} \
                 ${{ secrets.TW_AUTH_TOKEN }}

      # - name: 'Python: Deploy code to Twilio'
      #   run: |
      #     python ${{ env.PY_CODE_PATH }}/twilio_app.py ${{ env.TW_URL }} ${{ secrets.TW_ACCOUNT_SID }} ${{ secrets.TW_AUTH_TOKEN }}

      - name: 'Twilio: Function build deploy'
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action_type == 'Function-code-deploy' }}
        run: |
          python ${{ env.PY_CODE_PATH }}/twilio_func_code_deploy.py \
                 ${{ env.TW_URL }} \
                 ${{ env.TW_CODE_URL }} \
                 ${{ secrets.TW_ACCOUNT_SID }} \
                 ${{ secrets.TW_AUTH_TOKEN }} \
                 ${{ env.TW_SERVICE_SID }} \
                 ${{ env.TW_FUNC_SID }} \
                 ${{ env.TW_ENV_SID }} \
                 ${{ env.NODE_JS_CODE_PATH }}

      - name: 'Twilio: Add environment variables'
        if: >-
          ${{
            github.event_name == 'workflow_dispatch' && github.event.inputs.action_type == 'Variable-add-update' &&
            github.event.inputs.var_key != '' && github.event.inputs.var_key != 'None' &&
            github.event.inputs.var_value != '' && github.event.inputs.var_value != 'None'
          }}
        run: |
          python ${{ env.PY_CODE_PATH }}/twilio_env_var.py \
                 ${{ env.TW_URL }} \
                 ${{ secrets.TW_ACCOUNT_SID }} \
                 ${{ secrets.TW_AUTH_TOKEN }} \
                 ${{ env.TW_SERVICE_SID }} \
                 ${{ env.TW_ENV_SID }} \
                 ${{ github.event.inputs.var_key }} \
                 ${{ github.event.inputs.var_value }}
